(Comment Module, " This module is used to be a example code ")
(Comment Module, " * Note that it is ... ")
(Comment Block, " 
Block Comment 
* No use 
")
(Struct, )
(Identity, "a")
(LeftBC, )
(Identity, "b")
(Semicolon, )
(Identity, "Type3")
(Comma, )
(Identity, "c")
(Semicolon, )
(Identity, "Type4")
(RightBC, )
(Fn, )
(Identity, "main")
(LeftC, )
(Identity, "param1")
(Semicolon, )
(Identity, "Type1")
(Comma, )
(Identity, "param2")
(Semicolon, )
(Identity, "Type2")
(RightC, )
(ShouldReturn, )
(Identity, "Identity_Type")
(LeftBC, )
(Let, )
(Mut, )
(Identity, "_a")
(Semicolon, )
(Identity, "Type3")
(Is, )
(Int, "3")
(EndExp, )
(Let, )
(Mut, )
(Identity, "b3")
(Is, )
(Decimal, "4.3")
(EndExp, )
(Let, )
(Identity, "cons")
(Is, )
(Bool, "true")
(EndExp, )
(Let, )
(Identity, "s")
(Is, )
(String, "Nihao")
(EndExp, )
(If, )
(Identity, "_a")
(Gt, )
(Identity, "b3")
(LeftBC, )
(Identity, "_a")
(Is, )
(Int, "4")
(EndExp, )
(Identity, "print")
(LeftC, )
(String, "")
(RightC, )
(EndExp, )
(RightBC, )
(Else, )
(If, )
(LeftC, )
(Identity, "_a")
(Lt, )
(Identity, "b3")
(RightC, )
(LeftBC, )
(Identity, "print")
(LeftC, )
(String, "Hello")
(RightC, )
(EndExp, )
(RightBC, )
(Else, )
(If, )
(LeftC, )
(Identity, "_a")
(Eq, )
(Identity, "b3")
(RightC, )
(LeftBC, )
(Identity, "print")
(LeftC, )
(String, "cd")
(RightC, )
(EndExp, )
(RightBC, )
(While, )
(Identity, "_a")
(Gt, )
(Int, "3")
(OrS, )
(Identity, "cons")
(Eq, )
(Bool, "false")
(LeftBC, )
(Identity, "a")
(Is, )
(Identity, "a")
(Minus, )
(Int, "1")
(EndExp, )
(RightBC, )
(LeftBC, )
(Identity, "b3")
(Is, )
(Identity, "_a")
(Minus, )
(Int, "1")
(EndExp, )
(If, )
(Identity, "_a")
(Gt, )
(Int, "3")
(LeftBC, )
(Break, )
(EndExp, )
(RightBC, )
(RightBC, )
(Loop, )
(Identity, "b3")
(Le, )
(Int, "3")
(Match, )
(Identity, "cons")
(LeftBC, )
(Bool, "true")
(Semicolon, )
(LeftBC, )
(Return, )
(EndExp, )
(RightBC, )
(Comma, )
(Bool, "false")
(Semicolon, )
(LeftBC, )
(Return, )
(EndExp, )
(RightBC, )
(RightBC, )
(Return, )
(Int, "3")
(EndExp, )
(RightBC, )
